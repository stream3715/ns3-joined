{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            // Pipe Launch calls waf with appropriate arguments
            "name": "(gdb) Pipe Launch",
            "type": "cppdbg",
            "request": "launch",
            // my build folder is ${workspaceFolder}/build, substitute yours
            "program": "${workspaceFolder}/build/src/ndnSIM/examples/ns3-dev-ndn-kademlia-debug", //ここに実行したいプログラムを設定する
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [
                {
                    "Name": "NS_LOG",
                    "Value": "*=level_debug|prefix_func|prefix_time|prefix_node"
                },
            ],
            "externalConsole": false,
            "pipeTransport": {
                "debuggerPath": "", // leave blank
                "pipeProgram": "${workspaceFolder}/waf",
                // pipeArgs is essentially the entire waf command line arguments
                "pipeArgs": [
                    "--command-template",
                    "\"", // opening quote for command template
                    "/usr/bin/gdb",
                    "--interpreter=mi", // --interpreter lets vscode talk to gdb
                    "--args",
                    "%s",
                    "\"", // closing quote for command template
                    "--run",
                    "ndn-kademlia"
                ], //実行するプログラムの指定？
                "pipeCwd": ""
            },
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            // Launch config emulates waf environment, calls gdb directly
            "name": "(gdb) Launch",
            "type": "cppdbg",
            "request": "launch",
            // my build folder is ${workspaceFolder}/build, substitute yours
            "program": "${workspaceFolder}/build/src/ndnSIM/examples/ns3-dev-ndn-kademlia-debug", //ここに実行したいプログラムを設定する
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            // replace the values below with those found from running
            // $ waf shell
            // $ env
            "environment": [
/*
                {
                    "Name": "NS_LOG",
                    "Value": "*=level_debug|prefix_func|prefix_time|prefix_node"
                },*/
                {
                    "name": "ID_PRD",
                    "value": "35"
                },
                {
                    "name": "ID_CON_MJ",
                    "value": "5,12,19,22,26"
                },
                {
                    "name": "ID_CON_MN",
                    "value": "5,10,20,25,32"
                },
                {
                    "Name": "PYTHONPATH",
                    "Value": "/home/strea/ndnSIM/ns-3/build/bindings/python:/home/strea/ndnSIM/ns-3/src/visualizer:/home/strea/ndnSIM/pybindgen"
                },
                {
                    "Name": "LD_LIBRARY_PATH",
                    "Value": "/usr/lib/gcc/x86_64-linux-gnu/9:/home/strea/ndnSIM/ns-3/build/lib"
                },
                {
                    "Name": "NS3_MODULE_PATH",
                    "Value": "/usr/lib/gcc/x86_64-linux-gnu/9:/home/strea/ndnSIM/ns-3/build/lib"
                },
                {
                    "Name": "NS3_EXECUTABLE_PATH",
                    "Value": "/home/strea/ndnSIM/ns-3/build/src/fd-net-device:/home/strea/ndnSIM/ns-3/build/src/tap-bridge"
                },
                {
                    "Name": "PATH",
                    "Value": "/home/strea/ndnSIM/ns-3/build/src/fd-net-device:/home/strea/ndnSIM/ns-3/build/src/tap-bridge:/home/strea/.vscode-server/bin/899d46d82c4c95423fb7e10e68eba52050e30ba3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/Microsoft/jdk-11.0.13.8-hotspot/bin:/mnt/c/Program Files/Eclipse Foundation/jdk-8.0.302.8-hotspot/bin:/mnt/c/PROGRA~2/COMMON~1/Intel/SHARED~1/redist/intel64/compiler:/mnt/c/Program Files/Python310/Scripts/:/mnt/c/Program Files/Python310/:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Microsoft VS Code/bin:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/PowerShell/7/:/mnt/c/Program Files/dotnet/:/mnt/c/Program Files/Microsoft SQL Server/150/Tools/Binn/:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/Program Files (x86)/Windows Kits/10/Windows Performance Toolkit/:/mnt/c/Program Files (x86)/GNU Arm Embedded Toolchain/10 2021.10/bin:/mnt/c/Program Files/CMake/bin:/mnt/c/Program Files/Amazon/AWSCLIV2/:/mnt/c/Program Files/Go/bin:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/ProgramData/DockerDesktop/version-bin:/mnt/c/Users/strea/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/strea/AppData/Local/Box/Box Edit/:/mnt/c/Users/strea/.dotnet/tools:/mnt/c/Users/strea/go/bin:/snap/bin"
                }
            ],
            "externalConsole": false,
            "MIMode": "gdb",
            "miDebuggerPath": "/usr/bin/gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "logging": {
                "engineLogging": true,
                "trace": true
            }
        }
    ]
}